
<style>
    body {
		font-family: Arial, Helvetica, sans-serif;
	}

	* {
		box-sizing: border-box;
	}

	.input-container {
		display: -ms-flexbox;
		/* IE10 */
		display: flex;
		width: 100%;
		margin-bottom: 15px;
	}

    .ag-layout-normal.ag-root-wrapper-body {
		width: auto;
	}

	.ag-theme-balham .ag-cell-label-container {
		height: 100%;
		/* width: max-content; */
	}

	.ag-theme-balham .ag-cell {
		line-height: 26px;
		padding-left: 12px;
		padding-right: 12px;
		border: 1px solid transparent;
		padding-left: 0px;
		padding-right: 11px;
	}

	.ag-theme-balham {
		margin: 0px 40px 10px 5px !important;
	}

	.ag-theme-balham .ag-header-cell,
	.ag-theme-balham .ag-header-group-cell {
		line-height: 20px !important;
	}

	.ag-paging-row-summary-panel,
	.ag-paging-page-summary-panel {
		display: none;
	}

	.ag-cell-focus {
		background-color: #cce6ff !important;
	}

	/*new added*/
	.ag-header {
		position: inherit;
	}

	.ag-theme-balham .ag-header-cell-label .ag-header-cell-text {
		width: 100%;
		margin-top: 15px;
	}

	.ag-filter {
		position: inherit;
		overflow: hidden;
	}

    /* loader start */
	.display-none {
		display: none !important;
	}

	.overlay {
		position: fixed;
		margin: 0px;
		padding: 0px;
		right: 0px;
		top: 0px;
		width: 100%;
		height: 100%;
		z-index: 9999;
		opacity: 0.8;
	}

	.img {
		position: absolute;
		top: 0;
		bottom: 0;
		left: 0;
		right: 0;
		margin: auto;
	}

	.modal-content::-webkit-scrollbar {
		display: none;
	}

	/* loader end */
	.modal {
		width: 400px; 
		height: 500px; 
		position: fixed;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}

	/* verify css start */
	.switch {
	position: relative;
	display: inline-block;
	width: 40px;
	height: 20px;
	background-color: #ccc;
	border-radius: 20px;
	margin-right: 10px; /* Adjust as needed */
	}

	.switch input {
	opacity: 0;
	width: 0;
	height: 0;
	}

	.slider {
	position: absolute;
	cursor: pointer;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-color: #FF0000;
	-webkit-transition: .4s;
	transition: .4s;
	border-radius: 20px;
	}

	.slider:before {
	position: absolute;
	content: "";
	height: 16px;
	width: 16px;
	left: 2px;
	bottom: 2px;
	background-color: white;
	-webkit-transition: .4s;
	transition: .4s;
	border-radius: 50%;
	}

	input:checked + .slider {
	background-color: #4CAF50;
	}

	input:focus + .slider {
	box-shadow: 0 0 1px #2196F3;
	}

	input:checked + .slider:before {
	transform: translateX(20px);
	}
	/* verify css end */
	.material-icons{
		cursor: pointer;
	}
</style>
<body>
    <% if user_signed_in? %>
        <% if current_user.user_type == "admin" %>
            <span style="float: right; margin-right: 10px;">Wellcome: Admin | <%= link_to destroy_user_session_path, class: 'fa-solid fa-right-from-bracket' do %>
			<% end %></span>
            <div style="margin: 10px 5px; display: flex;">
				<div style="display: flex; margin-right: 15px;">
					<i class="material-icons">download</i>
					<span onclick="onBtnExport()" style="margin-top: 3px;cursor: pointer;">Student Details</span>
				</div>
				<div style="display: flex; margin-left: 15px;">
					<i class="material-icons">cloud_upload</i>
					<span onclick="onBtnUpload()" style="margin-left: 10px; margin-top: 3px;cursor: pointer;">Student Details</span>
				</div>
				<span style="margin-left: 30px;cursor: pointer;" onclick="addStudent()"><i class="fa-solid fa-user-plus fa-lg"></i></span>
				<span style="margin-left: 30px; color: red;cursor: pointer;" onclick="batchDelete()"><i class="fa-solid fa-trash fa-lg"></i></span>
				<button class="btn btn-success" style="margin-left: 30px;" onclick="batchVerifyUnverify(true)">Mass verifed</button>
				<button class="btn btn-danger" style="margin-left: 30px;" onclick="batchVerifyUnverify(false)">Mass Unverified</button>
			</div>
            <div id="loader" class="overlay display-none">
                <img class="img" src="images/loader.gif" />
            </div>
            <div>
                <div id="agGrid" style="height: 400px; width: 100%;" class="ag-theme-balham"></div>
            </div>
            <div id="editModal" class="modal fade">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header" style="margin: 0px 0px 10px 20px; display: flex; ">
                            <h4 id="add_edit_modal" class="modal-title"></h4>
							<span style="margin: 3px 0px 0px 160px;" onclick="modalClose('editModal')"><i class="material-icons">close</i></span>
                        </div>
                        <div class="modal-body" style="margin: 0px 0px 10px 20px;">
                            <form id="editForm">
                                <div class="input-field" style="margin-top: 10px;">
									<label for="editName">Name :</label><br />
                                    <input type="text" id="editName" name="name">
                                </div>
                                    <input type="hidden" id="user_id" name="user_id">
                                <div class="input-field" style="margin-top: 10px; margin-right: 20px;">
									<label for="editDob">Date of Birth :</label><br />
                                    <input type="date" id="editDob" name="dob">
                                </div>
                                <div class="input-field" style="margin-top: 10px;">
									<label for="editAddress">Address :</label><br />
                                    <input type="text" id="editAddress" name="address">
                                </div>
								<div class="input-field" style="margin-top: 10px;">
									<label for="editImage">Profile Image:</label><br />
									<input type="file" id="editImage" name="image">
								</div>
								<div style="margin-top: 20px;">
									<button type="submit" class="btn btn-success" style="margin-right: 10px;">Save</button>
									<button type="button" style="margin-left: 10px;" class="btn btn-danger" onclick="modalClose('editModal')">Close</button>
								</div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
		
 			<div id="uploadModal" class="modal fade">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header" style="margin: 0px 0px 10px 20px;">
                           <div style="display: flex">
								<h5 class="modal-title">Upload Student details</h5>
								<span style="margin: 3px 0px 0px 160px;" onclick="modalClose('uploadModal')"><i class="material-icons">close</i></span>
							</div>
							<span style="font-size: 13px; color: red;">(Format of File : students.csv)</span>
                        </div>
                        <div class="modal-body">
							<div style="margin: 0px 0px 10px 20px;"> 
								<label for="upload_file">Select File :</label><br />
								<input type="file" id="upload_datafile" multiple name="upload[datafile]">
							</div>
							<div style="margin: 0px 0px 10px 20px;margin-top: 44px;"> 
								<button id="uploadButton" class="btn btn-success" style="margin-right: 10px;">Upload</button>
								<button type="button" class="btn btn-danger" style="margin-left: 10px;" onclick="modalClose('uploadModal')">Close</button>
							</div>
                        </div>
                    </div>
                </div>
            </div> 
        <% end %>
    <% end %>
</body>

<script>
    var columnDefs = [
		{headerName: "", field: "", width: 60, checkboxSelection: true, headerCheckboxSelection: true, cellStyle: { 'text-align':'center','top': '15px' } },
		{headerName: "Image", field: "avatar_url", minWidth: 150, width: 100, cellRenderer: ImageCellRenderer, cellStyle: { 'border': '1px solid grey', 'border-radius': '50%', 'height': '40px', 'width': '40px', 'top': '10px', } },
		{ headerName: "Student Name", field: "name", cellStyle: { 'font-weight': 'bold', 'color': '#666666', 'padding-top': '15px', 'font-size': '15px' } },
		{ headerName: "Email", field: "email", cellStyle: { 'padding-top': '15px', 'color': '#686868' } },
		{ headerName: "Date of Birth", field: "dob", cellStyle: { 'padding-top': '15px', 'color': '#686868' } },
		{ headerName: "Address", field: "address", width: 300, cellStyle: { 'padding-top': '15px', 'color': '#686868' } },
		{ headerName: "Varification Status", field: "varified_by_admin&id", valueGetter: varify_status_with_id, cellRenderer: VarificationFieldRender, width: 150, cellStyle: { 'padding-top': '15px', 'color': '#686868' } },
		{ headerName: "Edit", field: "id", cellRenderer: EditFieldRender, width: 150, cellStyle: { 'padding-top': '15px', 'color': '#686868' } },
		{ headerName: "Delete", field: "id", cellRenderer: DeleteFieldRender, width: 150, cellStyle: { 'padding-top': '15px', 'color': '#686868' } }
	];

    function varify_status_with_id(params) {
		return params.data.varified_by_admin + '_' + params.data.id;
	}

   	var gridOptions;
	gridOptions =
	{
		columnDefs: columnDefs,
		rowData: null,
		enableSorting: true,
		enableFilter: true,
		rowSelection: 'multiple',
		headerHeight: 50,
		rowHeight: 60,
		enableRangeSelection: true,
		enableStatusBar: false,
		pagination: true,
        suppressExcelExport: true,
		suppressRowClickSelection: true,
		onGridReady: function () { },
		components: {
			'editFieldRender': EditFieldRender,
			'deleteFieldRender': DeleteFieldRender,
			'CheckBoxRender': CheckBoxRender
		}
	};

	function onBtnExport() {
        const columnsToInclude = ['name', 'email', 'dob', 'address'];
		const currentDate = new Date();
		const timestamp = currentDate.toISOString().replace(/:/g, '_').replace(/\..+/, '').replace('T', '_');
		const filenameWithTimestamp = `student_data_${timestamp}.csv`;
        gridOptions.api.exportDataAsCsv({
            columnKeys: columnsToInclude,
            fileName: filenameWithTimestamp
   		 });
    }

	function onBtnUpload(){
		$('#upload_datafile').val('');
		$('#uploadModal').modal('show');
	}

    function get_grid_load() {
		createNewDatasource();
    }
    $(document).ready(function () {
        get_grid_load();
        var gridDiv = document.querySelector('#agGrid');
		new agGrid.Grid(gridDiv, gridOptions);
	});

    function createNewDatasource() {
		$('#loader').removeClass('display-none')
		$.ajax({
			type: "get",
			url: "<%= all_user_path %>",
			success: function (msg) {
				var grid_data = msg;
				gridOptions.api.setRowData(msg);
				$('#loader').addClass('display-none')
			}
		});
	}
	
	function CheckBoxRender() { }
    function VarificationFieldRender() { } 
	function ImageCellRenderer() { }
	function EditFieldRender() { }
	function DeleteFieldRender() { }

	CheckBoxRender.prototype.init = function (params) {
        this.eGui = document.createElement('div');
        var text = `<input type="checkbox" id="${params}" style="margin-top: 13px;">`;
  		this.eGui.innerHTML = text;
    };

    CheckBoxRender.prototype.getGui = function () {
        return this.eGui;
    };

    // VarificationFieldRender.prototype.init = function (params) {
	// 	this.eGui = document.createElement('div');
	// 	var text = '';
	// 	if (params.value.split("_")[0] != "false")
    //         text = '<span style = "color: green;"> Varified </span>'
    //     else
	// 		text = '<button id="" onclick="handleClickVarification(\'' + params.value.split("_")[1] + '\')">Varify</button>'
	// 	this.eGui.innerHTML = text;
	// };

	VarificationFieldRender.prototype.init = function (params) {
		this.eGui = document.createElement('div');
		var status = params.value.split("_")[0];
		var userId = [params.value.split("_")[1]];

		var toggleSwitch = document.createElement('label');
		toggleSwitch.classList.add('switch');
		
		var input = document.createElement('input');
		input.type = 'checkbox';
		input.checked = status !== "false";
		input.onclick = function () {
			handleClickVarification(userId, input.checked);
		};
		
		var slider = document.createElement('span');
		slider.classList.add('slider', 'round');
		
		toggleSwitch.appendChild(input);
		toggleSwitch.appendChild(slider);

		this.eGui.appendChild(toggleSwitch);
	};

	VarificationFieldRender.prototype.getGui = function () {
		return this.eGui;
	};

	ImageCellRenderer.prototype.init = function (params) {
        this.eGui = document.createElement('div');
        var src = `<img src= ${params.value} width='40' height='40'>`
        this.eGui.innerHTML = src;
    };

    ImageCellRenderer.prototype.getGui = function () {
        return this.eGui;
    };

	EditFieldRender.prototype.init = function (params) {
        this.eGui = document.createElement('div');
        var text = '';
        if (params.value)
            text = '<span class="edit-button" onclick="handleClickEdit(\'' + params.value + '\')"><i class="material-icons">edit</i></span>';
        this.eGui.innerHTML = text;
    };

    EditFieldRender.prototype.getGui = function () {
        return this.eGui;
    };

	DeleteFieldRender.prototype.init = function (params) {
		this.eGui = document.createElement('div');
		var text = '';
		if (params.value)
			text = '<span id="modalDelete" onclick="handleClickDelete([\'' + params.value + '\'])" style="color: #FF0000;"><i class="material-icons">delete</i></span>'
		this.eGui.innerHTML = text;
	};

	DeleteFieldRender.prototype.getGui = function () {
		return this.eGui;
	};

    // function handleClickVarification(userID) {
	// 	$.ajax({
	// 		type: "post",
	// 		url: '/user_verify',
	// 		data: { id: userID },
    //         headers: {
    //             'X-CSRF-TOKEN':'<%= form_authenticity_token %>'
    //         },
	// 		success: function (msg) {
	// 			alert("Student Varified Sucessfully")
    //             get_grid_load();
	// 		}
	// 	});
	// }

	// function handleClickDelete(id) {
	// 	if (confirm("Are you sure you want to delete this student?")) {
	// 		$.ajax({
	// 			type: "post",
	// 			url: '/user_delete',
	// 			data: { id: id },
	// 			headers: {
	// 				'X-CSRF-TOKEN': '<%= form_authenticity_token %>'
	// 			},
	// 			success: function (msg) {
	// 				alert("Student Deleted Successfully");
	// 				get_grid_load();
	// 			}
	// 		});
	// 	}
	// }

	function batchVerifyUnverify(isVerified) {
		var selected_ids = get_selected_row_ids();
		if(get_selected_row_ids().length > 0){
			handleClickVarification(selected_ids, isVerified);
		}else {
			alert('Please select at least one student');
		}
	}
	function handleClickVarification(userID, isVerified) {
		let actionText = isVerified ? 'verify' : 'unverify';
		let pastTense = isVerified ? 'verified' : 'unverified';
		Swal.fire({
			title: `Are you sure you want to ${actionText} this student(s)?`,
			text: `This action will ${actionText} the student(s).`,
			icon: 'warning',
			showCancelButton: true,
			confirmButtonColor: '#3085d6',
			cancelButtonColor: '#d33',
			confirmButtonText: `Yes, ${actionText} it!`
		}).then((result) => {
			if (result.isConfirmed) {
				$('#loader').removeClass('display-none')
				$.ajax({
					type: 'post',
					url: '/user_verify',
					data: { ids: userID, value: isVerified},
					headers: {
						'X-CSRF-TOKEN': '<%= form_authenticity_token %>'
					},
					success: function (msg) {
						Swal.fire(
							`${actionText.charAt(0).toUpperCase() + pastTense.slice(1)}!`,
							`Student(s) has been ${pastTense} successfully.`,
							'success'
						);
						get_grid_load();
						$('#loader').addClass('display-none')
					}
				});
			}else {
				get_grid_load();
			}
		});
	}

	function handleClickDelete(ids) {
		Swal.fire({
			title: 'Are you sure?',
			text: 'You won\'t be able to revert this!',
			icon: 'warning',
			showCancelButton: true,
			confirmButtonColor: '#3085d6',
			cancelButtonColor: '#d33',
			confirmButtonText: 'Yes, delete it!'
		}).then((result) => {
			if (result.isConfirmed) {
				$('#loader').removeClass('display-none')
				$.ajax({
					type: 'post',
					url: '/user_delete',
					data: { ids: ids },
					headers: {
						'X-CSRF-TOKEN': '<%= form_authenticity_token %>'
					},
					success: function (msg) {
						Swal.fire(
							'Deleted!',
							'Student has been deleted.',
							'success'
						);
						get_grid_load();
						$('#loader').addClass('display-none')
					}
				});
			}
		});
	}

    function handleClickEdit(userID) {
		$.ajax({
			type: "get",
			url: '/user_details',
			data: { id: userID },
			success: function (msg) {
				editValueSet(msg);
			}
		});
	}

    function editValueSet(data) {
		$('#add_edit_modal').text("Edit Student Data");
        $('#editName').val(data.name);
        $('#user_id').val(data.id);
        $('#editDob').val(data.dob);
        $('#editAddress').val(data.address);
		$('#editImage').val('');
        $('#editModal').modal('show');
    }

	function addStudent() {
		$('#add_edit_modal').text("Add Student Data");
		$('#editName').val('');
        $('#user_id').val(0);
        $('#editDob').val('');
        $('#editAddress').val('');
		$('#editImage').val('');
		$('#editModal').modal('show');
	}

    $('#editForm').submit(function (e) {
        e.preventDefault();
		const formData = new FormData();
		formData.append('name', $('#editName').val());
		formData.append('dob', $('#editDob').val());
		formData.append('address', $('#editAddress').val());
		formData.append('id', $('#user_id').val());
		const imageInput = document.getElementById('editImage');
		if (imageInput.files.length > 0) {
			formData.append('avatar', imageInput.files[0]);
		}
		let text = !formData.id ? 'Added' : 'Edited';
        $.ajax({
			type: "post",
			url: '/user_add_and_update',
			data: formData,
			processData: false,
            contentType: false,
            headers: {
                'X-CSRF-TOKEN':'<%= form_authenticity_token %>'
            },
			success: function (msg) {
                $('#editModal').modal('hide');
				alert(`Student ${text} Sucessfully`)
                get_grid_load();
			}
		});
    });

	$('#uploadButton').click(function () {
		const fileInput = document.querySelector('#upload_datafile');
      	const file = fileInput.files[0];
		if (!file) {
			alert('Please select a CSV file.');
			return;
		}
		const formData = new FormData();
		formData.append('csv_file', file);
        $.ajax({
            type: 'POST',
            url: '/save_mass_data_upload',
            data: formData,
            processData: false,
            contentType: false,
			headers: {
                'X-CSRF-TOKEN':'<%= form_authenticity_token %>'
            },
            success: function (response) {
               alert(response);
			   $('#uploadModal').modal('hide');
                get_grid_load();
            },
            error: function () {
            }
        });
    });

	function modalClose(id) {
		$(`#${id}`).modal('hide');
	}

	function get_selected_row_ids(){
		var sel_rows=[]; 
		gridOptions.api.forEachNodeAfterFilterAndSort(function(node, index){
			if (node.selected == true) {
				if (node.data) { 
					sel_rows.push(node.data.id);
				} 
			}
		});
		return sel_rows;
	}

	function batchDelete() {
		var selected_ids = get_selected_row_ids();
		if(get_selected_row_ids().length > 0){
			handleClickDelete(selected_ids);
		}else {
			alert('Please select at least one student');
		}
	}
	//-------- get all selected row ids (those which are not hidden after filtering also)
	// function get_selected_all_row_ids(){
	// 	console.log("called get");
	// 	var sel_rows=[];
	// 	var selected_nodes = gridOptions.api.getSelectedNodes();
	// 	selected_nodes.forEach(function(node){
	// 		sel_rows.push(node.data.id);
	// 	});
	// 	return sel_rows;
	// }

	function disable_enable_btn(){
		if(get_selected_row_ids().length > 0){
			// $(".space_between_two_menu").addClass("active_menu");
			// $(".edit_menu").attr("onclick","plan_items_edit();").css("cursor","pointer");
			// $(".weekly_flow_menu").attr("onclick","plan_items_weekly_flow();").css("cursor","pointer");
			// $(".calculate_buy_menu").attr("onclick","plan_items_calculate_buy();").css("cursor","pointer");
			// $(".plan_items_lock").attr("onclick","plan_items_lock_menu();").css("cursor","pointer");
			// $(".plan_items_unlock").attr("onclick","plan_items_unlock_menu();").css("cursor","pointer");
			// $(".action_menu").css("cursor","pointer");
		}else{
			// $(".space_between_two_menu").removeClass("active_menu");
			// $(".edit_menu").removeAttr("onclick").css("cursor","context-menu");
			// $(".weekly_flow_menu").removeAttr("onclick").css("cursor","context-menu");
			// $(".calculate_buy_menu").removeAttr("onclick").css("cursor","context-menu");
			// $(".plan_items_lock").removeAttr("onclick").css("cursor","context-menu");
			// $(".plan_items_unlock").removeAttr("onclick").css("cursor","context-menu");
			// $(".action_menu").css("cursor","context-menu");
		}
	}
</script>
